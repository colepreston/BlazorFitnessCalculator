@page "/orm"
@inject UserDataService UserData

<PageTitle>One Rep Max</PageTitle>

<h1>One Rep Max Estimator</h1>

<EditForm Model="@formModel" OnValidSubmit="calculate">
    <DataAnnotationsValidator/>
    <MudGrid>
        <MudItem xs="12" sm="7">
            <MudCard Style="width:380px;">
                <MudCardContent Style="width:380px;">
                    <MudNumericField Label="Weight" @bind-Value="@formModel.Weight" For="@(() => formModel.Weight)" />
                    <MudNumericField Label="Reps" @bind-Value="@formModel.Reps" For="@(() => formModel.Reps)" />
                    <MudButton Variant="Variant.Filled" Color="Color.Primary" ButtonType="ButtonType.Submit">Calculate</MudButton>
                </MudCardContent>
            </MudCard>
        </MudItem>
    </MudGrid>
</EditForm>

<MudText Typo="Typo.body1">
    <strong>One Rep Max: <MudText Color="Color.Primary">@(max.HasValue ? max.Value.ToString("0") : "N/A")</MudText></strong>
    
</MudText>

@code {
    private double? max = null;

    // Define the model to bind to the form
    private OneRepMaxModel formModel = new OneRepMaxModel();

    // Calculation logic for One Rep Max (1RM)
    private void calculate()
    {
        // Ensure the reps value is positive to avoid unrealistic calculations
        if (formModel.Weight > 0 && formModel.Reps > 0)
        {
            // Formula to estimate One Rep Max (1RM)
            max = Math.Floor(formModel.Weight * (1 + (formModel.Reps / 30.0)));
        }
        else
        {
            max = null; // Reset if input is invalid
        }
    }

    // Model to hold the form values
    public class OneRepMaxModel
    {
        public double Weight { get; set; }
        public double Reps { get; set; }
    }
}
